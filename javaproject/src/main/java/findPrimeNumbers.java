public class findPrimeNumbers {
    //需求：找到101-200的所有素数
    //说明：素数：如果除了1和它本身以外，不能被其他正整数整除，就叫素数
    //分析：101-200之间的数据可以采用循环依次拿到；每拿到一个数，判断该数是否是素数
    //判断规则是：从2开始遍历到该数的一半的数据，看是否有数据可以整除它，有则不是素数，没有则是素数
    public static void main(String[] args) {
        //1、定义一个循环，找到101-200之间的全部数据
        for (int i = 101; i <= 200; i++) {
            // i = 101 102 ……199 200
            //信号位：标记
            boolean flag = true; // 一开始认为当前数据是素数
            //2、判断当前遍历的这个数据是否是素数
            for (int j = 2; j < i / 2; j++) {
                if (i % j == 0){
                    flag = false;
                    break;
                }

            }
            //3、根据判定的及结果选择是否输出这个数据，是素数则输出
            if(flag){
                System.out.print(i + "\t");
            }

        }
    }
}
